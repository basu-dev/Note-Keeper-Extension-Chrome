(function(e){const t=new DOMParser;let o,n,s,i,l,r,a,c,d,u,y,p,g,b,f,m=[];const v=t=>e.querySelector(t),h=(e,t,o)=>e.addEventListener(t,o),w=(e,t)=>Object.keys(t).forEach(o=>e.style[o]=t[o]);h(e,"DOMContentLoaded",()=>{o=v(".first-page"),n=v(".second-page"),s=v("#open-notes"),i=v("#second-page-close"),l=v("#backup"),d=v("#delete-all"),r=v("textarea"),u=v("input"),c=v(".cards"),a=v("#restore"),y=v("input[type=file]"),p=v("#close-file-input"),buttonsDiv=v(".sec-page-btns"),fileInputDiv=v("#file-input"),b=v("#search"),chrome.tabs.query({currentWindow:!0,active:!0},function(e){f=new URL(e[0].url).origin}),h(s,"click",e=>k(!1)),h(i,"click",e=>$()),h(r,"keyup",e=>N()),h(r,"paste",e=>N()),h(u,"keyup",e=>N()),h(l,"click",e=>F()),h(a,"click",e=>D(!0)),h(p,"click",e=>D(!1)),h(d,"click",e=>A()),h(y,"change",e=>C(e)),h(b,"keyup",e=>T(e.target.value)),k(!1)});const $=()=>{r.value="",r.setAttribute("note-id",""),u.value="",k(!0)},D=e=>{if(e)return w(fileInputDiv,{display:"block"}),void w(buttonsDiv,{display:"none"});w(fileInputDiv,{display:"none"}),y.value="",w(buttonsDiv,{display:"block"})},k=e=>{e?(o.style.display="grid",n.style.display="none"):(E(),o.style.display="none",n.style.display="grid")},N=async()=>{let e=r.value,t=u.value,o=r.getAttribute("note-id");""==o.trim()&&(o=Date.now(),r.setAttribute("note-id",o)),console.log(o);let n=`Notes ${o}`;if(""==e.trim()&&""==t.trim())return void j(n);let s=await x(n)?await x(n):{};s[n]={title:t,body:e,url:f},chrome.storage.sync.set(s,e=>{})},x=e=>new Promise((t,o)=>{chrome.storage.sync.get(e,e=>{t(e)})}),S=async e=>{let{body:t,title:o}=m.filter(t=>t.id==e)[0];r.value=t,r.setAttribute("note-id",e),u.value=o},E=async()=>I(await L()),L=()=>new Promise(e=>{g=0,chrome.storage.sync.get(null,t=>{m=[],Object.keys(t).forEach(e=>{if(/Notes (.)+/.test(e)){g++;let o={id:/Notes (.+)/.exec(e)[1],url:t[e].url,title:t[e].title,body:t[e].body};m.unshift(o)}}),e(m)})}),T=e=>{let t=new RegExp(e,"i");tempNotes=[],""!=e.trim()?(m.forEach(({id:e,url:o,title:n,body:s})=>{(t.test(o)||t.test(n)||t.test(s))&&tempNotes.push({id:e,url:o,title:n,body:s})}),I(tempNotes)):I(m)},j=e=>{/^Notes .+$/.test(e)&&chrome.storage.sync.remove(e,e=>{E(),M("Note Deleted Successfully!")})},A=e=>{confirm("Do You Want To Delete All Notes?")&&chrome.storage.sync.get(null,e=>{Object.keys(e).forEach(e=>j(e)),E()})},I=e=>{const o=v("h3 small");o.innerText=g,c.innerHTML="";for(let o=0;o<e.length;o++){let n=e[o],s=t.parseFromString(`\n              <div class="card">\n                  <div class="card-header"><a href="${n.url}">${n.url}</a><span><small></small><button note-id="${n.id}">Edit</button> <button id="${n.id}"><object data="../assets/delete.svg" type="image/svg+xml"></object></button></span></div>\n                  <div class="card-title">${n.title}</div>\n                  <pre class="card-body">${n.body}</pre>\n              </div>\n          `,"text/html").querySelector(".card");s.querySelector("button[id]").addEventListener("click",e=>{confirm("Do you want to delete  this note?")&&j(`Notes ${e.target.id}`)}),s.querySelector("button[note-id]").addEventListener("click",e=>{S(e.target.getAttribute("note-id")),k(!0)});let i=q(parseInt(n.id));s.querySelector("small").innerText=i;s.querySelector("div");c.appendChild(s)}},q=e=>{const t=new Date(e),o=Date.now()-e,n=864e5;if(o<n&&o>0)return/([\d]+:[\d]+)/.exec(t.toTimeString())[0];if(o<7*n){const[,e,o]=/([\D]+) \D+ .+ (\d+:\d+)/.exec(t);return`${e}, ${o}`}if(o<364*n){const[,e,o]=/([\D]+) ([\D]+ [\d]+)/.exec(t);return`${e}, ${o}`}{const[,e,o]=/[\D]+ ([\D]+ [\d]+) ([\d]+)/.exec(t);return`${e}, ${o}`}},F=()=>{let t=e.createElement("a"),o=new Date;t.setAttribute("download",`NotesBackup-${o.getFullYear()}-${o.getMonth()}-${o.getDate()}-${o.getHours()}-${o.getMinutes()}-${o.getSeconds()}.json`),t.href=`data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(m))}`,t.style.display="none",e.body.append(t),console.log(t),t.click(),v("[download]").remove()};let O;const M=(e,t)=>{const o=v(".notifier");o.innerText=e;const n="notifier-shown";let s="a";t&&"danger"==t?s="notifier-danger":t&&"warn"==t&&(s="notifier-warn"),o.classList.add(s),o.classList.add(n),O=setTimeout(e=>{o.classList.remove(n),setTimeout(e=>o.classList.remove(s))},3e3)},R=new FileReader,C=e=>{let t=e.target.files[0];"application/json"==t.type&&/^NotesBackup-[\d]+-[\d]+-[\d]+-[\d]+-[\d]+-[\d]+.json$/.test(e.target.files[0].name)?(R.readAsText(t,"UTF-8"),R.onloadend=(e=>{console.log(e.target.result);let t=!0;["url","title","body"].forEach(o=>{e.target.result.includes(o)||(t=!0)}),t?confirm("Are you sure you want to use this backup?")&&(m=JSON.parse(e.target.result),m[0].url&&m[0].body&&m[0].title&&m[0].id?(m.forEach(e=>{const{id:t,url:o,body:n,title:s}=e;let i={};i[`Notes ${t}`]={url:o,title:s,body:n},chrome.storage.sync.set(i),M("Notes Restored Successfully!")}),D(!1),E()):M("Invalid File","warn")):M("Invalid File","warn")})):M("Invalid File","warn")}})(document);